import args

def fib(n: Int): Int =
  if (n == 0) {
    0
  } else if (n == 1) {
    1
  } else {
    fib(n - 1) + fib(n - 2)
  }

def main_loop(iters: Int, n: Int): Unit = {
  val res = fib(n)
  if (iters == 1) {
    println(res)
  } else {
    main_loop(iters - 1, n)
  }
}

def main() =
  commandLineArgs() match {
    case Cons(iters_str, Cons(n_str, Nil())) =>
      with on[WrongFormat].panic
      val iters = string::toInt(iters_str)
      val n = string::toInt(n_str)
      main_loop(iters, n)
    case _ => panic("Expected Arguments \"iters\" and \"n\"")
  }
