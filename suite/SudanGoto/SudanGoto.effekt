import args

effect goto(i: Int): Int

def sudan(n: Int, x: Int, y: Int): Int / goto = {
  if (n == 0) {
    do goto(x + y)
  } else if (y == 0) {
    do goto(x)
  } else {
    val inner = try { sudan(n, x, y - 1) } with goto { i => i }
    sudan(n - 1, inner, inner + y)
  }
}

def main_loop(iters: Int, n: Int, x: Int, y: Int): Unit = {
  val res = try { sudan(n, x, y) } with goto { i => i }
  if (iters == 1) {
    println(res)
  } else {
    main_loop(iters - 1, n, x, y)
  }
}

def main() =
  commandLineArgs() match {
    case Cons(iters_str, Cons(n_str, Cons(x_str, Cons(y_str, Nil())))) =>
      with on[WrongFormat].panic
      val iters = string::toInt(iters_str)
      val n = string::toInt(n_str)
      val x = string::toInt(x_str)
      val y = string::toInt(y_str)
      main_loop(iters, n, x, y)
    case _ => panic("Expected Arguments \"iters\", \"n\", \"x\", \"y\"")
  }